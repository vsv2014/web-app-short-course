#+title:  Configuration Parameters for the Flask and Google Oauth
#+AUTHOR: VLEAD
#+DATE: [2017-01-12 Thu]
#+SETUPFILE: ../../org-templates/level-2.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction

  The configuration parameters used for the FLASK application and Google OAUTH
  are declared here. 


* Flask Application Configuration
  Configuration for the flask application. 
#+NAME: flask_app_config
#+BEGIN_SRC python
# DB URI
# example DB URI:
# mysql+oursql://scott:tiger@localhost/mydatabase
# postgresql+psycopg2://scott:tiger@localhost/mydatabase
#  e.g.,  SQLALCHEMY_DATABASE_URI = 'mysql+oursql://<userid>:<password>@localhost/webapp'
SQLALCHEMY_DATABASE_URI = 'mysql+oursql://<userid>:<password>@<servername>/<db_name>'

# Debug from SQLAlchemy
# Turn this to False on production
SQLALCHEMY_ECHO = False
SQLALCHEMY_TRACK_MODIFICATIONS = True

# List of allowed origins for CORS
ALLOWED_ORIGINS = "['*']"

# List of allowed IPs
WHITELIST_IPS = ["127.0.0.1"]

# Configure your log paths
LOG_FILE_DIRECTORY = 'logs'
LOG_FILE = 'webapp.log'

# Log level for the application
#10=DEBUG, 20=INFO, 30=WARNING, 40=ERROR, 50=CRITICAL",
LOG_LEVEL = 10

# allow flask-session cookies to be read by HTML as well
SESSION_COOKIE_HTTPONLY = False
#+END_SRC

* Google OAuth Configurations
  Configuration for the flask application. 
#+NAME: google_oauth_conf
#+BEGIN_SRC python
CONSUMER_KEY = "<consumer-key>"
CONSUMER_SECRET = "<secret-key>"

#+END_SRC

  
* Tangle                                           :boilerplate:
** flask_app_config


#+BEGIN_SRC python :tangle flask_app_config.py :eval no :noweb yes

<<flask_app_config>>

#+END_SRC
** Google_OAuth_config
#+BEGIN_SRC python :tangle google_oauth_config.py :eval no :noweb yes
<<google_oauth_conf>>

#+END_SRC
